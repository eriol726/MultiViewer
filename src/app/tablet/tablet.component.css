@import './tabletChart.css';
/* body{
  overflow: hidden;
  width:100vw;
  height:100vh;
} */

/* Create three equal columns that floats next to each other */
.column {
    float: left;
    width: calc(100vw/3 - 40px);
    height: 100%;
    border: 2px solid;
    /*height: 300px;  Should be removed. Only for demonstration */
}

drag-scroll {
    height: 50px;
    width: 100px;
  }

#circle {
    background-color: rgba(255, 255, 255, 1);
    width: 30px;
    height: 30px;
    border-radius: 50%;
    float: left;
    border: 2px solid;
}
#title{
    float: left;
    margin: auto 4px;
    font-size: 20px;
}

.line1 {
    width: 112px;
    height: 47px;
    border-bottom: 3px solid red;
    transform:
        translateY(-20px)
        translateX(5px)
        rotate(60deg); 
    position: absolute;
    /* top: -20px; */
}
.line2 {
    width: 112px;
    height: 47px;
    border-bottom: 1px solid green;
    transform:
        translateY(20px)
        translateX(5px)
        rotate(-26deg);
    position: absolute;
    top: -33px;
    left: -13px;
}

.crossed {
    background: 
        linear-gradient(to top left,
            rgba(0,0,0,0) 0%,
            rgba(0,0,0,0) calc(50% - 0.8px),
            rgba(0,0,0,1) 50%,
            rgba(0,0,0,0) calc(50% + 0.8px),
            rgba(0,0,0,0) 100%),
        linear-gradient(to top right,
            rgba(0,0,0,0) 0%,
            rgba(0,0,0,0) calc(50% - 0.8px),
            rgba(0,0,0,1) 50%,
            rgba(0,0,0,0) calc(50% + 0.8px),
            rgba(0,0,0,0) 100%);
}

.cardLetter{
    position: absolute;
    bottom: 50px;
    margin-right: auto;
    margin-left: auto;
    left: 0;
    right: 0;
    width: 100%;
    text-align: center;
    font-size: 100px;
}

.cardList{
    display: block;
    width: 100%; 
    height: 100%;
}

.card {
    display: inline-block;
    position: relative;
    
    
}
.cardBorder{
    display: inline-block;
    height: 500px;
    width: 100%;
    border: 3px solid;
    margin-right: 10px;
    background-color: #fff;
}


.diag {
    background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' preserveAspectRatio='none' viewBox='0 0 100 100'><path d='M1 0 L0 1 L99 100 L100 99' fill='black' /><path d='M0 99 L99 0 L100 1 L1 100' fill='black' /></svg>");
    background-repeat:no-repeat;
    background-position:center center;
    background-size: 100% 100%, auto;
}



#container .box {
    width:100vw;
    height:100vh;
    display:inline-block;
    position:relative;
}

*, *:after, *:before {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }

.col-1-2 {
    width: 50%;
}

.col-1-3 {
    width: 33.33%;
}

.col-2-3 {
    width: 25%;
}
.col-1-8 {
    width: 12.5%;
}

.grid-pad {
    padding: 20px 0 20px 20px;
  }

.grid-pad > [class*='col-']:last-of-type {
    /* padding-right: 20px; */
  }

.grid {
    display: flex;                       /* establish flex container */
    flex-wrap: wrap;                     /* enable flex items to wrap */
    justify-content: space-around;
}

.cell {
    flex: 0 0 32%;                       /* don't grow, don't shrink, width */
    height: 78vh;
    border: 2px solid;
  }
.cell:nth-child(-n+3) {
    height: 10vh;
}

.expansionPanel{
    
}

.mat-expansion-panel  {
    border-radius: 0 !important;
    border: 2px solid;
    transition: none !important;
    box-shadow: none !important;
    margin: -2px !important;
    padding: 5px;
  }
.mat-expanded {
    background-color: rgb(208, 230, 255);
}
.mat-expansion-panel-header {
    height: 42px;
    display: contents !important; 
    padding: 0 0px !important; 
}

.cell:nth-child(n+4):nth-child(-n+6){
    border-bottom: none;
    border-top: none;
}

.cell:nth-child(n+7) {
    height: 10vh;
}

[class*='col-1'] {
    float: left;
    width: calc(33.33% - 7px);
    border: 2px solid;
    height: 10%;
}

[class*='col-2'] {
    float: left;
    width: calc(33.33% - 7px);
    border: 2px solid;
    height: 80%;
}

[class*='col-']:nth-of-type(2) {
    margin: 0 10px;
}


#container {
    overflow-y:scroll;
    overflow-x:hidden;
    transform: rotate(270deg) translateX(-100%);
    transform-origin: top left;
    position:absolute;
    width:100vh;
    height:100vw;
}
#container2 {
    transform: rotate(90deg) translateY(-100vh);
    transform-origin: top left;
    white-space:nowrap;
    font-size:0;
}

.example-container {
    width: 400px;
    max-width: 100%;
    margin: 0 25px 25px 0;
    display: inline-block;
    vertical-align: top;
}

.example-list {
    /* border: solid 1px #ccc; */
    min-height: 60px;
    background: white;
    overflow: hidden;
    display: block;
    height: 102%;
}

.example-list > mat-expansion-panel {
    background-color: rgb(251, 255, 20);
}

.example-list-right {
    /* border: solid 1px #ccc; */
    min-height: 60px;
    background: white;
    overflow: hidden;
    display: block;
    height: 102%;
    /* https://stackblitz.com/edit/mat-drag-drop-xfdfuh?file=src%2Fapp%2Fapp.component.html */
}

.example-list-right:first-child {
    background-color: aqua;
} 

.example-box {
    padding: 20px 10px;
    border-bottom: solid 1px #ccc;
    color: rgba(0, 0, 0, 0.87);
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
    cursor: move;
    background: white;
    font-size: 14px;
}

.cdk-drag-preview {
    box-sizing: border-box;
    border-radius: 4px;
    box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
                0 8px 10px 1px rgba(0, 0, 0, 0.14),
                0 3px 14px 2px rgba(0, 0, 0, 0.12);
}

.cdk-drag-placeholder {
    opacity: 0;
}

.cdk-drag-animating {
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.example-box:last-child {
    border: none;
}

.example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder) {
    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.brush .extent {
    stroke: #fff;
    fill: steelblue;
    fill-opacity: .25;
    shape-rendering: crispEdges;
  }
  
rect.mover {
            stroke: red;
            stroke-opacity: .1;
            fill: lightSteelBlue;
            fill-opacity: .5;
        }

/* in-flight clone */
.gu-mirror {
    position: fixed !important;
    margin: 0 !important;
    z-index: 9999 !important;
    opacity: 0.8;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
    filter: alpha(opacity=80);
    pointer-events: none;
  }
  /* high-performance display:none; helper */
  .gu-hide {
    left: -9999px !important;
  }
  /* added to mirrorContainer (default = body) while dragging */
  .gu-unselectable {
    -webkit-user-select: none !important;
    -moz-user-select: none !important;
    -ms-user-select: none !important;
    user-select: none !important;
  }
  /* added to the source element while its mirror is dragged */
  .gu-transit {
    opacity: 0.2;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
    filter: alpha(opacity=20);
  }